#
# Copyright 2016 Blockie AB
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
@clone: file

_dep_install:
    _info:
        title: Check dependencies for this module.
    _env:
        - RUN: OS_DEP_INSTALL

_info:
    title: OS module
    desc:|
        Handle operating system tasks such as user processes, packages and services management.

info:
    _info:
        title: Show information about the OS
    _env:
        - RUN: OS_INFO

harden:
    _info:
        title: Harden the machine
    _env:
        - RUN: OS_HARDEN

userexist:
    _info:
        title: Check if a user exists
    _env:
        - RUN: OS_USER_EXIST -- ${targetuser-}

groupexist:
    _info:
        title: Check if a group exists
    _env:
        - RUN: OS_GROUP_EXIST -- ${group-}

installsudo:
    _info:
        title: Install the 'sudo' pkg
    _env:
        - RUN: OS_INSTALL_PKG "sudo"

createuser:
    _info:
        title: Create a new user
    _env:
        - targetuserpubkeyfile: ${targetuserpubkeyfile:-${SSHPUBKEYFILE-}}
        - RUN: OS_CREATE_USER -- ${targetuser-} ${targetuserpubkeyfile-}

mksudo:
    _info:
        title: Make an existing user into sudo
    _env:
        - RUN: OS_MKSUDO_USER -- ${targetuser-}

disableroot:
    _info:
        title: Disable root login
        desc: |
            Run this to make it so that the root user no longer can login
            over SSH. This increases the security of the machine.
            Note: make sure the super user has been setup successfully first.
    _env:
        - RUN: OS_DISABLE_ROOT

disableuser:
    _info:
        title: Disable an user account
        desc: |
            Disable a user from logging in.
    _env:
        - RUN: OS_DISABLE_USER -- ${targetuserdisable-}

motd:
    _info:
        title: Create/replace motd file
    _env:
        - motdfile: ${motdfile:-@{DIR}/motd}
    _env:
        - RUN: OS_MOTD -- ${motdfile}

update:
    _info:
        title: Update the OS package lists
    _env:
        - RUN: OS_UPDATE

reboot:
    _info:
        title: Reboot the system
    _env:
        - RUN: OS_REBOOT

upgrade:
    _info:
        title: Update and upgrade OS
    _env:
        - RUN: OS_UPGRADE

service:
    _info:
        title: Control a service
    _env:
        - service: ${service-}
        - action: ${action-}
        - RUN: OS_SERVICE ${service-} ${action-}

shell:
    _info:
        title: Enter into shell
    _env:
        - shell: sh
        - RUN: OS_SHELL ${service-}

install:
    _info:
        title: Install any pkg
        desc: |
            Pkg name as positional argument.
            Always provide Debian names.
    _env:
        - pkg: ${pkg-}
        - RUN: OS_INSTALL_PKG ${pkg-}
...
